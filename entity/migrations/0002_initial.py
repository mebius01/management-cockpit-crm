# Generated by Django 5.2.5 on 2025-08-27 07:01

import django.contrib.postgres.constraints
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('entity', '0001_enable_btree_gist'),
    ]

    operations = [
        migrations.CreateModel(
            name='DetailType',
            fields=[
                ('code', models.CharField(help_text='Unique code for the detail type.', max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Human-friendly name.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optional description.')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='EntityType',
            fields=[
                ('code', models.CharField(help_text='Unique code for entity type.', max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Full name of the entity type.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optional description.')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('display_name', models.CharField(db_index=True, max_length=255)),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_current', models.BooleanField(db_index=True, default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entity_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='entity.entitytype')),
            ],
            options={
                'ordering': ['-valid_from'],
            },
        ),
        migrations.CreateModel(
            name='EntityDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail_value', models.TextField()),
                ('hashdiff', models.CharField(editable=False, max_length=64)),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_current', models.BooleanField(db_index=True, default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('detail_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='entity.detailtype')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='entity.entity')),
            ],
            options={
                'ordering': ['-valid_from'],
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_current', True)), fields=('entity', 'detail_type'), name='unique_current_entity_detail'), django.contrib.postgres.constraints.ExclusionConstraint(expressions=[(models.F('entity_id'), '='), (models.F('detail_type_id'), '='), (models.Func(models.F('valid_from'), models.F('valid_to'), models.Value('[)'), function='tstzrange'), '&&')], name='exclude_overlapping_details')],
            },
        ),
        migrations.AddConstraint(
            model_name='entity',
            constraint=models.UniqueConstraint(condition=models.Q(('is_current', True)), fields=('entity_uid',), name='unique_current_entity'),
        ),
        migrations.AddConstraint(
            model_name='entity',
            constraint=django.contrib.postgres.constraints.ExclusionConstraint(expressions=[(models.F('entity_uid'), '='), (models.Func(models.F('valid_from'), models.F('valid_to'), models.Value('[)'), function='tstzrange'), '&&')], name='exclude_overlapping_entities'),
        ),
    ]
