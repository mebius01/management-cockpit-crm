# Generated by Django 5.0.1 on 2025-08-31 11:58

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('entity', '0004_entity_hashdiff_entity_ent_uid_curr_cov_idx_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('audit_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('entity_uid', models.UUIDField(db_index=True, help_text='Entity identifier that was changed')),
                ('table_name', models.CharField(db_index=True, help_text='Table that was modified (entity, entity_detail)', max_length=50)),
                ('operation', models.CharField(choices=[('INSERT', 'Insert'), ('UPDATE', 'Update'), ('DELETE', 'Delete')], db_index=True, max_length=10)),
                ('detail_code', models.CharField(blank=True, db_index=True, help_text='Detail type code for detail changes', max_length=100, null=True)),
                ('before_value', models.JSONField(blank=True, help_text='Value before change', null=True)),
                ('after_value', models.JSONField(blank=True, help_text='Value after change', null=True)),
                ('request_id', models.UUIDField(blank=True, help_text='Request identifier for grouping related changes', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('actor', models.ForeignKey(help_text='User that initiated the change', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_log',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['entity_uid', 'timestamp'], name='audit_entity_time_idx'), models.Index(fields=['actor', 'timestamp'], name='audit_actor_time_idx'), models.Index(fields=['table_name', 'operation'], name='audit_table_op_idx'), models.Index(fields=['detail_code'], name='audit_detail_code_idx'), models.Index(fields=['request_id'], name='audit_request_idx')],
            },
        ),
    ]
